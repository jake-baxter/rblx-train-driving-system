This is nicked from the original rod script. These are example values.

Example:
TableRef will be the train class.
Plugin.lua being the reference in roblox.

local TableBuilder = {
    ["LODRenderThreshold"] = 600,
    ["DimensionScaleFactor"] = 1,
    ["PartsAreReversed"] = false,
    ["DriverDiameter] = 5,
    ["FrontDiameter"] = 3,
    ...
    ...
    ["BackXOffset"] = 3.5
}

TableRef:EnableModule(Plugin.lua)
TableRef:SendMessage("RodSystem", {["action"] = "AddLoco", ["Model"] = ObjectRef, ["RodValues"] = TableBuilder})


NW Spacek Rods Notes:

--MADE BY NWSPACEK

-- Edit these variables! The script will take care of the rest.
-- Please have the AHandle part's Front face the front of the locomotive.
-- Please have all parts oriented the same way as AHandle.
-- Please use the same part names.

-- This script is meant for locomotives with internal pistons: no crosshead or connecting rod is animated with this script.

--NOTE: when naming the wheels, the convention is as follows:
--[[
	"wheel" -- the crank
	"1" or "2" -- the side the crank goes on. 1 is left, 2 is right
	"-7.2" -- the distance fore or aft that the crank is located. Positive is towards the rear of the loco.
--]]

-- Also: the wheels must face the same orientation as AHandle ///when the crank pin is in the upwards orientation./// <-- very important



Values (Put this in the table properly):



local LODRenderThreshold = 600-- the distance at which the animation disappears

local DimensionScaleFactor = 1 --scale all dimensions by this factor (useful when resizing models)

--[[ Configuring the motion ]]--
local PartsAreReversed = false -- If the parts are set up where Front is at the rear of the loco
local DriverDiameter = 5 -- the diameter of the drivers (maps to [2*WheelRadius] of legacy scripts)
local FrontDiameter = 3 -- the diameter of the leading wheels
local BackDiameter = 3 -- the diameter of the trailing wheels
local RodRadius = 1.4 -- the distance the rods are from the center of the wheel
local CylinderVerticalOffset = 0.4 -- The vertical distance between the axle and the crosshead pin. Positive is up
local CylinderAngle = math.rad(0) -- the angle of inclination of the cylinders, in radians. Positive rotates up
local ConnectingLength = 6.8 -- the length of the connecting rod (maps to [ConRodPoint1-ConRodPoint2] of legacy scripts)

-- [[ Configuring the parts ]]--

-- Coupling Rod
local CopRodXOffset = 4 -- The distance from the centerline of the locomotive to the Coupling Rod part. Always positive
local CopRodYOffset = 0 -- The vertical offset of the Coupling Rod part from the coupling rod. Positive is up
local CopRodZOffset = -0.6 -- The horizontal offset of the Coupling Rod part from the coupling rod. Positive is forward (maps to [-RodOffset] of legacy scripts)

-- Connecting rod
local ConRodXOffset = 4.4 -- The distance from the centerline of the locomotive to the Connecting Rod part. Always positive
local ConRodYOffset = 0 -- The vertical distance from the center of the connecting rod to the Connecting Rod part. Positive is up
local ConRodZOffset = 3.1 -- The horizontal distance from the crank pin to the Connecting Rod part. Always positve (maps to [ConRodPoint1] of legacy scripts)

-- Crosshead
local CrossheadXOffset = 4.5 -- The distance from the centerline of the locomotive to the Crosshead part. Always positive
local CrossheadYOffset = 0 -- The vertical distance from the crosshead pin to the Crosshead part. Positive is up
local CrossheadZOffset = 2 -- The Horizontal offset of from the crosshead pin to the Crosshead part. Positive is forward (maps to [CrossheadPoint1] of legacy scripts)

-- Driver wheels
local DriverXOffset = 3.5 -- the distance from the centerline of the locomotive to the Wheel parts. Always positive

-- Leading wheels
local FrontXOffset = 3.5 -- the distance from the centerline of the locomotive to the Front wheel parts. Always positive
local FrontYOffset = FrontDiameter*0.5-DriverDiameter*0.5 -- The vertical distance between the driver axle and the leading wheels' axles. Negative is down (DOESNT HAVE TO BE DEFINED IN TABLE)
-- the default formula for FrontYOffset and BackYOffset will place the wheels on the rails based on the diameters of the wheels (as defined in the script above)

-- trailing wheels
local BackXOffset = 3.5 -- the distance from the centerline of the locomotive to the Back wheel parts. Always positive
local BackYOffset = BackDiameter*0.5-DriverDiameter*0.5 -- The vertical distance between the driver axle and the trailing wheels' axles. Negative is down (DOESNT HAVE TO BE DEFINED IN TABLE)